///////////////////////////////////////////////////////////////////////////////////////////////////
// Copyright (C) 2015 The 8-Bit Bunch. Licensed under the Apache License, Version 1.1 
// (the "License"); you may not use this file except in compliance with the License.
// You may obtain a copy of the License at <http://www.apache.org/licenses/LICENSE-1.1>.
// Unless required by applicable law or agreed to in writing, software distributed under 
// the License is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF 
// ANY KIND, either express or implied. See the License for the specific language 
// governing permissions and limitations under the License.
///////////////////////////////////////////////////////////////////////////////////////////////////

// Functions we import from the main game loop. If you find there are some over there that aren't
// yet exported, modify this header then add the mechanics at the top of gameloop.pla.
include "gamelib.plh"

// Data structure definitions
include "playtype.plh"

// Definition of constants for functions exported by this module
include "party.plh"

// This pointer is the root of all heap-tracked (and garbage collected) objects.
// See playtype.plh for definitions of all the datastructures and how they interconnect.
word global

// Exported functions go here. First a predef for each one, then a table with function pointers
// in the same order as the constants are defined in the the header.
predef _party_showPlayerSheet
word[] funcTbl = @_party_showPlayerSheet

// Other global variables here

///////////////////////////////////////////////////////////////////////////////////////////////////
// Show player data
def _party_showPlayerSheet(num)
  word pl
  word x, y
  byte dir

  // This is just a stub for now. Dave, this is where you go wild...

  // Count the number of players
  pl = global=>p_players
  while num > 0
    pl = pl=>p_nextObj
    num = num - 1
  loop

  // First, display the player's name in the title bar
  showMapName(pl=>s_name)

  // Next, show stats in the main map area
  setMapWindow()
  clearWindow()
  displayStr("Stats")

  // Show inventory in the right hand area
  setWindow2()
  clearWindow()
  displayStr("Inventory")

  // Get a key, do something
  getUpperKey()
  // do something here
end

///////////////////////////////////////////////////////////////////////////////////////////////////
// Boilerplate module initialization code
global = getGlobals()
return @funcTbl
done